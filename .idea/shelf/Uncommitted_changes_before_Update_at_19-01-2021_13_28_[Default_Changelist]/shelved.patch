Index: app/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>apply plugin: 'com.android.application'\r\napply plugin: 'com.google.gms.google-services'\r\napply plugin: 'com.google.firebase.crashlytics'\r\n\r\nandroid {\r\n    compileSdkVersion 30\r\n    buildToolsVersion \"30.0.2\"\r\n\r\n    defaultConfig {\r\n        applicationId \"com.A4.oplev\"\r\n        minSdkVersion 16\r\n        targetSdkVersion 30\r\n        versionCode 1\r\n        versionName \"1.0\"\r\n        multiDexEnabled true\r\n        testInstrumentationRunner \"androidx.test.runner.AndroidJUnitRunner\"\r\n    }\r\n\r\n    buildTypes {\r\n        release {\r\n            minifyEnabled false\r\n            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'\r\n        }\r\n    }\r\n    compileOptions {\r\n        sourceCompatibility JavaVersion.VERSION_1_8\r\n        targetCompatibility JavaVersion.VERSION_1_8\r\n    }\r\n    testOptions{\r\n        unitTests.returnDefaultValues = true\r\n    }\r\n}\r\n\r\ndependencies {\r\n    implementation fileTree(dir: \"libs\", include: [\"*.jar\"])\r\n    implementation 'com.squareup.picasso:picasso:2.5.2'\r\n    implementation \"com.airbnb.android:lottie:3.0.6\"\r\n    implementation 'com.nostra13.universalimageloader:universal-image-loader:1.9.5'\r\n    implementation 'com.github.bumptech.glide:glide:4.7.1'\r\n    implementation 'com.mikhaellopez:circularimageview:4.2.0'\r\n    implementation 'com.facebook.android:facebook-android-sdk:[5,6)'\r\n    implementation 'com.facebook.android:facebook-share:[5,6)'\r\n    implementation platform('com.google.firebase:firebase-bom:26.3.0')\r\n    implementation 'com.google.firebase:firebase-crashlytics'\r\n    implementation 'com.google.firebase:firebase-analytics'\r\n\r\n\r\n    implementation 'androidx.appcompat:appcompat:1.2.0'\r\n    implementation 'com.squareup.picasso:picasso:2.71828'\r\n    implementation 'androidx.constraintlayout:constraintlayout:2.0.1'\r\n    implementation 'androidx.legacy:legacy-support-v4:1.0.0'\r\n    implementation 'com.google.android.material:material:1.2.1'\r\n    implementation 'com.google.firebase:firebase-firestore:22.0.0'\r\n    implementation 'com.fasterxml.jackson.core:jackson-databind:2.6.3'\r\n    implementation 'com.google.firebase:firebase-storage:19.2.0'\r\n    implementation 'com.google.firebase:firebase-auth:20.0.0'\r\n    implementation 'androidx.annotation:annotation:1.1.0'\r\n    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.2.0'\r\n    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.2.0'\r\n    implementation 'androidx.cardview:cardview:1.0.0'\r\n    testImplementation 'junit:junit:4.12'\r\n    androidTestImplementation 'androidx.test.ext:junit:1.1.2'\r\n    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'\r\n    implementation platform('com.google.firebase:firebase-bom:26.0.0')\r\n    implementation 'com.google.firebase:firebase-analytics'\r\n    implementation 'com.android.support:multidex:1.0.3'\r\n    //range seekbar from https://android-arsenal.com/details/1/3976#!description\r\n    implementation 'io.apptik.widget:multislider:1.3'\r\n    implementation 'com.github.nihad92:SwipeableCards:1.0.19'\r\n    implementation 'com.squareup.picasso:picasso:2.71828'\r\n    //google places\r\n    implementation 'com.google.android.libraries.places:places:2.4.0'\r\n    androidTestImplementation 'androidx.test:rules:1.3.0-beta01'\r\n    androidTestImplementation 'androidx.test.espresso:espresso-contrib:3.4.0-alpha03'\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/build.gradle	(revision fa227bda99bf7352feae0339a0d3660e763bb680)
+++ app/build.gradle	(date 1611055403952)
@@ -68,6 +68,9 @@
     implementation 'io.apptik.widget:multislider:1.3'
     implementation 'com.github.nihad92:SwipeableCards:1.0.19'
     implementation 'com.squareup.picasso:picasso:2.71828'
+    //facebook
+    implementation 'com.facebook.android:facebook-android-sdk:[5,6)'
+    implementation 'com.facebook.android:facebook-share:[5,6)'
     //google places
     implementation 'com.google.android.libraries.places:places:2.4.0'
     androidTestImplementation 'androidx.test:rules:1.3.0-beta01'
Index: app/src/main/java/com/A4/oplev/Activity_Ini.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.A4.oplev;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\n\r\nimport android.app.NotificationChannel;\r\nimport android.app.NotificationManager;\r\nimport android.content.Context;\r\nimport android.content.Intent;\r\nimport android.content.SharedPreferences;\r\nimport android.os.Build;\r\nimport android.os.Bundle;\r\nimport android.preference.PreferenceManager;\r\nimport android.util.Log;\r\nimport android.widget.Toast;\r\n\r\nimport com.A4.oplev.__Main.Activity_Main;\r\nimport com.facebook.CallbackManager;\r\nimport com.facebook.FacebookCallback;\r\nimport com.facebook.FacebookException;\r\nimport com.facebook.GraphRequest;\r\nimport com.facebook.GraphResponse;\r\nimport com.facebook.Profile;\r\nimport com.facebook.login.LoginManager;\r\nimport com.facebook.login.LoginResult;\r\nimport com.google.android.gms.tasks.OnCompleteListener;\r\nimport com.google.android.gms.tasks.Task;\r\nimport com.google.firebase.auth.FirebaseAuth;\r\nimport com.google.firebase.auth.FirebaseUser;\r\nimport com.google.firebase.firestore.CollectionReference;\r\nimport com.google.firebase.firestore.DocumentSnapshot;\r\nimport com.google.firebase.firestore.FirebaseFirestore;\r\nimport com.google.firebase.firestore.Query;\r\nimport com.google.firebase.firestore.QuerySnapshot;\r\n\r\nimport org.json.JSONException;\r\nimport org.json.JSONObject;\r\nimport com.google.firebase.crashlytics.FirebaseCrashlytics;\r\n\r\nimport java.io.Serializable;\r\nimport java.util.ArrayList;\r\nimport java.util.Arrays;\r\n\r\nimport Controller.EventController;\r\nimport Controller.UserController;\r\nimport DAL.Classes.ChatDAO;\r\nimport DAL.Classes.EventDAO;\r\nimport DAL.Classes.UserDAO;\r\nimport DAL.Classes.UserDAO;\r\nimport DAL.Interfaces.CallbackUser;\r\nimport DTO.UserDTO;\r\n\r\npublic class Activity_Ini extends AppCompatActivity implements Serializable {\r\n    UserController userController;\r\n    UserDTO userDTO;\r\n    SharedPreferences prefs;\r\n    Context ctx;\r\n    boolean onInstance;\r\n    ArrayList<String> pictures;\r\n    PicassoFunc picasso;\r\n    private FirebaseAuth mAuth;\r\n    private CallbackManager callbackManager;\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity__ini);\r\n        mAuth = FirebaseAuth.getInstance();\r\n\r\n\r\n\r\n\r\n        //KØR NEDENSTÅENDE FOR AT RESETTE OG UDKOMMENTER EFTER\r\n        //FirebaseAuth.getInstance().signOut();\r\n        //PreferenceManager.getDefaultSharedPreferences(ctx).edit().clear().apply();\r\n\r\n\r\n\r\n    }\r\n\r\n    @Override\r\n    public void onStart() {\r\n        super.onStart();\r\n\r\n        createNotificationChannel();\r\n        // Check if user is signed in (non-null) and update UI accordingly.\r\n        FirebaseUser currentUser = mAuth.getCurrentUser();\r\n        userController = UserController.getInstance();\r\n        ctx = this;\r\n        prefs = PreferenceManager.getDefaultSharedPreferences(this);\r\n        onInstance = prefs.getBoolean(\"onInstance\", false);\r\n\r\n        //Laver controllerne med implemetationerene af DAO, da de er singeltons skal der alle andre steder bare kaldes getInstance()\r\n\r\n        UserController.getInstance(new UserDAO(), new ChatDAO(), new EventDAO());\r\n        EventController.getInstance(new UserDAO(), new EventDAO());\r\n\r\n\r\n       if(currentUser == null){\r\n            prefs.edit().putBoolean(\"onInstance\", false).apply();\r\n            Intent i = new Intent(this, Activity_Main.class);\r\n            i.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK | Intent.FLAG_ACTIVITY_CLEAR_TASK);\r\n            startActivity(i);\r\n\r\n        }else {\r\n           if (prefs.getBoolean(\"facebook\",false)){\r\n               LoginManager.getInstance().logInWithReadPermissions(this, Arrays.asList(\"public_profile\", \"email\", \"user_birthday\"));\r\n               callbackManager = CallbackManager.Factory.create();\r\n               LoginManager.getInstance().registerCallback(callbackManager, new FacebookCallback<LoginResult>() {\r\n                   @Override\r\n                   public void onSuccess(LoginResult loginResult) {\r\n                       Profile profile = Profile.getCurrentProfile();\r\n                       userController.getUser(new CallbackUser() {\r\n                           @Override\r\n                           public void onCallback(UserDTO user) {\r\n                               setUserDTO(user);\r\n                               try {\r\n                                   prefs.edit().putString(\"userId\", user.getUserId()).apply();\r\n                               } catch (Exception e) {\r\n                                   FirebaseAuth.getInstance().signOut();\r\n                                   PreferenceManager.getDefaultSharedPreferences(ctx).edit().clear().apply();\r\n                               }\r\n\r\n                               Intent i = new Intent(ctx, Activity_Main.class);\r\n                               userController.setCurrUser(user);\r\n                               FirebaseCrashlytics.getInstance().setUserId(user.getUserId());\r\n                               i.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK | Intent.FLAG_ACTIVITY_CLEAR_TASK);\r\n\r\n                               startActivity(i);\r\n                           }\r\n                       }, profile.getId());\r\n                   }\r\n\r\n                   @Override\r\n                   public void onCancel() {\r\n                       Toast.makeText(ctx,\"Cancelled\",Toast.LENGTH_SHORT).show();\r\n                   }\r\n\r\n                   @Override\r\n                   public void onError(FacebookException error) {\r\n                       Toast.makeText(ctx,error.toString(),Toast.LENGTH_SHORT).show();\r\n                   }\r\n               });\r\n           } else {\r\n               prefs.edit().putBoolean(\"onInstance\", true).apply();\r\n\r\n               userController.getUser(new CallbackUser() {\r\n                   @Override\r\n                   public void onCallback(UserDTO user) {\r\n                       setUserDTO(user);\r\n                       try {\r\n                           prefs.edit().putString(\"userId\", user.getUserId()).apply();\r\n                       } catch (Exception e) {\r\n                           FirebaseAuth.getInstance().signOut();\r\n                           PreferenceManager.getDefaultSharedPreferences(ctx).edit().clear().apply();\r\n                       }\r\n\r\n                        Intent i = new Intent(ctx, Activity_Main.class);\r\n                        userController.setCurrUser(user);\r\n                        FirebaseCrashlytics.getInstance().setUserId(user.getUserId());\r\n                        i.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK | Intent.FLAG_ACTIVITY_CLEAR_TASK);\r\n\r\n                       startActivity(i);\r\n                   }\r\n               }, currentUser.getUid());\r\n\r\n\r\n           }\r\n        }\r\n\r\n    }\r\n/*\r\n    private void getUserPictures() {\r\n        pictures = controller.getUserPictures();\r\n        for(int i = 0; i<pictures.size(); i++){\r\n\r\n            if(pictures.get(i) != null){\r\n                Picasso.get().load(pictures.get(i)).into(picassoFunc.picassoImageTarget(getApplicationContext(), \"imageDir\", \"ppic\"+i+\".png\"));\r\n            } else System.out.println(\"hejTESST\");\r\n\r\n        }\r\n\r\n    } */\r\n\r\n\r\n    private void setUserDTO(UserDTO dto){\r\n        this.userDTO = dto;\r\n    }\r\n\r\n    private void createNotificationChannel() {\r\n        final String CHANNEL_ID = \"0\";\r\n        // Create the NotificationChannel, but only on API 26+ because\r\n        // the NotificationChannel class is new and not in the support library\r\n        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.O) {\r\n            CharSequence name = getString(R.string.channel_name);\r\n            String description = getString(R.string.channel_description);\r\n            int importance = NotificationManager.IMPORTANCE_DEFAULT;\r\n            NotificationChannel channel = new NotificationChannel(CHANNEL_ID, name, importance);\r\n            channel.setDescription(description);\r\n            // Register the channel with the system; you can't change the importance\r\n            // or other notification behaviors after this\r\n            NotificationManager notificationManager = getSystemService(NotificationManager.class);\r\n            notificationManager.createNotificationChannel(channel);\r\n        }\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/A4/oplev/Activity_Ini.java	(revision fa227bda99bf7352feae0339a0d3660e763bb680)
+++ app/src/main/java/com/A4/oplev/Activity_Ini.java	(date 1611056106956)
@@ -66,16 +66,14 @@
         super.onCreate(savedInstanceState);
         setContentView(R.layout.activity__ini);
         mAuth = FirebaseAuth.getInstance();
-
-
-
+        UserController.getInstance(new UserDAO(), new ChatDAO(), new EventDAO());
+        EventController.getInstance(new UserDAO(), new EventDAO());
 
         //KØR NEDENSTÅENDE FOR AT RESETTE OG UDKOMMENTER EFTER
         //FirebaseAuth.getInstance().signOut();
         //PreferenceManager.getDefaultSharedPreferences(ctx).edit().clear().apply();
 
 
-
     }
 
     @Override
@@ -92,8 +90,7 @@
 
         //Laver controllerne med implemetationerene af DAO, da de er singeltons skal der alle andre steder bare kaldes getInstance()
 
-        UserController.getInstance(new UserDAO(), new ChatDAO(), new EventDAO());
-        EventController.getInstance(new UserDAO(), new EventDAO());
+
 
 
        if(currentUser == null){
